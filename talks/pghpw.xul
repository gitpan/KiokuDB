<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet href="chrome://global/skin/" type="text/css"?><?xml-stylesheet href="takahashi.css" type="text/css"?><page xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" id="presentation" xmlns:html="http:/www.w3.org/1999/xhtml" orient="vertical" onkeypress="Presentation.onKeyPress(event);">
<html:textarea id="builtinCode" style="visibility: collapse"><![CDATA[
How to Good-Bye Relational:
If You Constrict Usage
100 Times Everyday.
Malarkey? or Effective Way?
----
KiokuDB
----
Persistent
Object
Graph
----
“transparent
persistence”
----
    my $id = $k->store($object)
----
A DB
for OO
----
I ♥
OO
----
simple
----
maintainable
----
flexible
----
well
understood
----
I ♥
DB
----
reliable
----
fast
----
scalable
----
well
understood
----
I hate
DB
----
SQL
----
“relational
algebra”
----
why?
----
I ♥
OO
----
ORM
----
O↔R
----
O←R
----
O→R
----
O≈R
----
    package Person;
    use Moose;
    
    has name => ( is => "rw" );
        
    has spouse => (
        isa => "Person",
        is  => "rw",
    );
----
    package Employee;
    use Moose;
    
    extends qw(Person);
    
    has job => ( is => "rw" );
----
Employee
isa
Person
----
schema
choices
----
⒈
----
vertical
mapping
----
a.k.a
----
table
inheritance
----
person ( id, name )
employee ( id, job )
----
person.id
=
employee.id
----
FAIL
----
JOIN JOIN JOIN J
OIN JOIN JOIN JO
IN JOIN JOIN JOI
N JOIN JOIN JOIN
----
⒉
----
horizontal
mapping
----
a.k.a.
----
duplicate
columns
----
person ( id, name )
employee ( id, name, job )
----
FAIL
----
$person_pk
----
which
table?
----
⒊
----
filtered
mapping
----
a.k.a
----
reblessing
----
person ( id, class,
name, job )
----
least
FAIL
----
maintenance
----
ugly
----
𝍐
----
SQL
----
heterogeneous
results?
----
FAIL
----
nested
rels?
----
FAIL
----
graphs?
----
FAIL
----
SQL
----
hates
----
encapsulation
----
hates
----
polymorphism
----
hates
----
extensibility
----
hates
----
object
oriented
----
hates
----
graphs
----
hates
----
everything
----
«Godwin's law»
----
no
solutions
----
workarounds
----
we
deal
----
we dumb
it down
----
we
hack
----
☹
----
“document
oriented
database”
----
Document
=
ID + Data
----
opaque
----
no
schema
----
DBMs
----
without
SQL
----
☺
----
choices
----
⒈
----
CouchDB
----
Written
in
Erlang
----
ZOMGWTF
BBQ!!!1one!1
----
IDs
----
JSON
----
REST
----
no
rels
----
⒉
----
Persevere
----
IDs
----
JSON
----
REST
----
JSPON
(rels)
----
⒊
----
Prophet
----
IDs
----
JSON
----
P2P
----
smart
syncing
----
⒋
----
Triple
stores
----
graphd
RDF
----
⒌
----
XML DBs
----
XPath
XQuery
XSLT
----
⎙
----
$object
=
“document”?
----
Example:
----
    {
        "__CLASS__": "Employee",
        "id"       : "homer",
        "name"     : "Homer Simpson",
        "spouse"   : "marge",
        "job"      : "Safety Inspector"
    }
----
    {
        "__CLASS__": "Person",
        "id"       : "marge",
        "name"     : "Marge Simpson",
        "spouse"   : "homer"
    }
----
easy
----
… in some
languages
----
… OO
languages
----
not
Perl
----
until
2006
----
Moose
----
✌
----
“document
oriented
database”
----
+
----
Moose
----
=
----
KiokuDB
----
    my $id = $k->store($homer);
----
    my $homer = $k->lookup($id);
----
UID
based
----
Persistent
Object
Graph
----
    my $marge = $homer->spouse
----
    refaddr($homer->spouse->spouse)
                  ==
           refaddr($homer)
----
lazy
sets
----
    has children => (
        isa => "KiokuDB::Set",
        is  => "rw",
    );
----
    $homer->children->members
----
like
Set::Object
----
lazy
attributes
----
    has spouse => (
        traits => [ "KiokuDB::Lazy" ],
        …
    );
----
familiar
----
it's just
Perl
----
transparent
----
but
sane
----
no
magic
----
no
tying
----
no
proxies
----
no
overloading
----
no
XS
----
no
AUTOLOAD
----
no
crack
----
what is
supported?
----
weak
refs
----
shared
refs
----
circular
refs
----
… graphs
----
tied
refs
----
e.g.
Tie::RefHash
----
custom
hooks
----
☝
----
KiokuDB::Collapser
----
@objects
----
collapse
into
----
@entries
----
entry?
----
“simple
data”
----
no
cycles
----
refs
by ID
----
how?
----
Moose
is easy
----
MOP
----
introspection
----
safe
----
predictable
----
everything
else?
----
harder
----
KiokuDB::TypeMap
----
flexible
----
still
safe
----
still
predictable
----
less
transparent
----
retrieval?
----
KiokuDB::Linker
----
is ID
live?
----
load
entry
----
inflate
----
repeat
----
storage?
----
KiokuDB::Backend
----
multiple
drivers
----
“document
oriented
database”
----
language
agnostic
----
stores
entries
----
simple
data
----
simple
like JSON
----
❀
----
Querying
----
“document”
----
opaque
----
how to
index?
----
⒈
----
user
space
----
Search::GIN
----
Generalized
Inverted
Index
----
store:
----
$obj
↓
@keys
----
fetch:
----
$key
↓
@ids
----
@ids
↓
@objs
----
respects
encapsulation
----
⒉
----
backend
----
e.g.
CouchDB
views
----
breaks
encapsulation
----
opt in
----
you say
how
----
⌖
----
Backends
----
⒈
----
BDB
----
fast
----
ACID
----
Search::GIN
integration
----
⒉
----
JSPON
----
very
simple
----
files
on disk
----
CouchDB
----
⒊
----
MyBackend
----
simple
API
----
reuse
is easy
----
𝄢
----
Conclusion
----
KiokuDB
----
respects your
objects
----
Moose
is key
----
transparent
but
predictable
----
not
vaporware
----
☀
----
Prior
Art
----
AllegroCache Tangram Pixie
DBIx::Class OOPS Postgres
LINQ Zope/ZCatalog MLDBM
DBM::Deep JSPON Prolog
RDF BKNR db4o LDAP bddbddb
MooseX::Storage::Directory
----
Future
Directions
----
persistence
metaclass
----
joint effort
with DBIC
----
    $obj->id;
    $obj->name("bar");
    $obj->update;
----
Search::GIN
----
transitive
closures
----
(prolog)
----
many ideas
from Postgres
----
HALP!
----
KiokuDB::Tutorial
----
#moose
----
nothingmuch@woobling.org
----
Thank You
]]>
</html:textarea>

<deck flex="1" id="deck">

<vbox flex="1"
	onmousemove="Presentation.onMouseMoveOnCanvas(event);">
	<toolbox id="canvasToolbar">
		<toolbar>
			<toolbarbutton oncommand="Presentation.home()" label="|&lt;&lt;"
				observes="canBack"/>
			<toolbarbutton oncommand="Presentation.back()" label="&lt;"
				observes="canBack"/>
			<toolbarbutton oncommand="Presentation.forward()" label="&gt;"
				observes="canForward"/>
			<toolbarbutton oncommand="Presentation.end()" label="&gt;&gt;|"
				observes="canForward"/>
			<toolbarseparator/>
			<hbox align="center">
				<textbox id="current_page" size="4"
					oninput="if (this.value) Presentation.showPage(parseInt(this.value)-1);"/>
				<description value="/"/>
				<description id="max_page"/>
			</hbox>
			<toolbarseparator/>
			<vbox flex="2">
				<spacer flex="1"/>
				<scrollbar id="scroller"
					align="center" orient="horizontal"
					oncommand="Presentation.showPage(parseInt(event.target.getAttribute('curpos')));"
					onclick="Presentation.showPage(parseInt(event.target.getAttribute('curpos')));"
					onmousedown="Presentation.onScrollerDragStart();"
					onmousemove="Presentation.onScrollerDragMove();"
					onmouseup="Presentation.onScrollerDragDrop();"/>
				<spacer flex="1"/>
			</vbox>
			<toolbarseparator/>
			<spacer flex="1"/>
			<toolbarseparator/>
			<toolbarbutton id="toggleEva" label="Eva"
				type="checkbox"
				autoCheck="false"
				oncommand="Presentation.toggleEvaMode();"/>
			<toolbarseparator/>
			<toolbarbutton label="Edit"
				oncommand="Presentation.toggleEditMode();"/>
			<toolbarbutton oncommand="Presentation.reload();" label="Reload"/>
		</toolbar>
	</toolbox>
	<vbox flex="1" id="canvas"
		onclick="Presentation.onPresentationClick(event);">
		<spacer flex="1"/>
		<hbox flex="1">
			<spacer flex="1"/>
			<vbox id="content"/>
			<spacer flex="1"/>
		</hbox>
		<spacer flex="1"/>
	</vbox>
</vbox>


<vbox flex="1" id="edit">
	<toolbox>
		<toolbar>
			<toolbarbutton label="New Page"
				oncommand="Presentation.addPage()"/>
			<spacer flex="1"/>
			<toolbarseparator/>
			<toolbarbutton label="View"
				oncommand="Presentation.toggleEditMode();"/>
			<toolbarbutton oncommand="Presentation.reload();" label="Reload"/>
		</toolbar>
	</toolbox>
	<textbox id="textField" flex="1" multiline="true"
		oninput="Presentation.onEdit()"/>
	<hbox collapsed="true">
		<iframe id="dataLoader" onload="if (window.Presentation) Presentation.onDataLoad();"/>
	</hbox>
</vbox>

</deck>


<broadcasterset>
	<broadcaster id="canBack"/>
	<broadcaster id="canForward"/>
</broadcasterset>

<commandset>
	<command id="cmd_forward"
		oncommand="if (Presentation.isPresentationMode) Presentation.forward();"/>
	<command id="cmd_back"
		oncommand="if (Presentation.isPresentationMode) Presentation.back();"/>
	<command id="cmd_home"
		oncommand="if (Presentation.isPresentationMode) Presentation.home();"/>
	<command id="cmd_end"
		oncommand="if (Presentation.isPresentationMode) Presentation.end();"/>
</commandset>
<keyset>
	<key keycode="VK_ENTER"      command="cmd_forward"/>
	<key keycode="VK_RETURN"     command="cmd_forward"/>
	<key keycode="VK_PAGE_DOWN"  command="cmd_forward"/>
	<key keycode="VK_RIGHT"      command="cmd_forward"/>
	<key keycode="VK_DOWN"       command="cmd_forward"/>
	<!-- key keycode="VK_BACK_SPACE" command="cmd_back"/-->
	<key keycode="VK_PAGE_UP"    command="cmd_back"/>
        <!-- <key keycode="VK_BACK_UP"    command="cmd_back"/>-->
        <!-- <key keycode="VK_BACK_LEFT"  command="cmd_back"/>-->
	<key keycode="VK_HOME"       command="cmd_home"/>
	<key keycode="VK_END"        command="cmd_end"/>
	<key key="n" modifiers="accel" oncommand="Presentation.addPage();"/>
	<key key="r" modifiers="accel" oncommand="window.location.reload();"/>
	<key key="e" modifiers="accel" oncommand="Presentation.toggleEditMode();"/>
	<key key="a" modifiers="accel" oncommand="Presentation.toggleEvaMode();"/>
</keyset>


<script src="takahashi.js" type="application/x-javascript" />
</page>
<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is the Takahashi-Method-based Presentation Tool in XUL.
   -
   - The Initial Developer of the Original Code is SHIMODA Hiroshi.
   - Portions created by the Initial Developer are Copyright (C) 2005
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s): SHIMODA Hiroshi <piro@p.club.ne.jp>
   -
   - ***** END LICENSE BLOCK ***** -->


